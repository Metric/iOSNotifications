package iosnotifications;

import com.google.android.glass.timeline.LiveCard;
import com.google.android.glass.timeline.LiveCard.PublishMode;

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;

public class MainService extends Service {

	@Override
	public IBinder onBind(Intent arg0) {
		// TODO Auto-generated method stub
		return null;
	}

	private static final String LIVE_CARD_TAG = "iosnotifications";

    private NotificationsDrawer mCallback;

    private LiveCard mLiveCard;
	
    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        if (mLiveCard == null) {
            mLiveCard = new LiveCard(this, LIVE_CARD_TAG);

            // Keep track of the callback to remove it before unpublishing.
            mCallback = new NotificationsDrawer(this);
            mLiveCard.setDirectRenderingEnabled(true).getSurfaceHolder().addCallback(mCallback);

            mLiveCard.attach(this);
	        mLiveCard.publish(PublishMode.REVEAL);
	        Intent startServiceIntent = new Intent(this, NotificationsService.class);
	        this.startService(startServiceIntent);
        } else {
            mLiveCard.navigate();
        }

        return START_STICKY;
    }

    @Override
    public void onDestroy() {
        if (mLiveCard != null && mLiveCard.isPublished()) {
            mLiveCard.unpublish();
            mLiveCard = null;
        }
        super.onDestroy();
    }
}
